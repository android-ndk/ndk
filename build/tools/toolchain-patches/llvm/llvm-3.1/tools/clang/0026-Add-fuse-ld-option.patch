From 3e077f8dd958382202f1d8af72b9fbc9828b13b6 Mon Sep 17 00:00:00 2001
From: Logan Chien <loganchien@google.com>
Date: Thu, 4 Oct 2012 15:56:55 +0800
Subject: [PATCH] Add -fuse-ld option.

---
 include/clang/Driver/Options.td |    1 +
 lib/Driver/ToolChains.cpp       |    2 +-
 lib/Driver/Tools.cpp            |   31 +++++++++++++++++++++++--------
 lib/Driver/Tools.h              |    4 +++-
 test/Driver/fuse-ld.c           |   16 ++++++++++++++++
 5 files changed, 44 insertions(+), 10 deletions(-)
 create mode 100644 test/Driver/fuse-ld.c

diff --git a/include/clang/Driver/Options.td b/include/clang/Driver/Options.td
index 3a31ea1..5ddb489 100644
--- a/include/clang/Driver/Options.td
+++ b/include/clang/Driver/Options.td
@@ -277,6 +277,7 @@ def fno_address_sanitizer : Flag<"-fno-address-sanitizer">, Group<f_Group>;
 def fthread_sanitizer : Flag<"-fthread-sanitizer">, Group<f_Group>;
 def fno_thread_sanitizer : Flag<"-fno-thread-sanitizer">, Group<f_Group>;
 def fasm : Flag<"-fasm">, Group<f_Group>;
+def fuse_ld_EQ : Joined<"-fuse-ld=">, Group<f_Group>;
 
 def fasm_blocks : Flag<"-fasm-blocks">, Group<f_Group>;
 def fno_asm_blocks : Flag<"-fno-asm-blocks">, Group<f_Group>;
diff --git a/lib/Driver/ToolChains.cpp b/lib/Driver/ToolChains.cpp
index d1d7412..dd504ea 100644
--- a/lib/Driver/ToolChains.cpp
+++ b/lib/Driver/ToolChains.cpp
@@ -2012,7 +2012,7 @@ Linux::Linux(const Driver &D, const llvm::Triple &Triple, const ArgList &Args)
   PPaths.push_back(Twine(GCCInstallation.getParentLibPath() + "/../" +
                          GCCInstallation.getTriple().str() + "/bin").str());
 
-  Linker = GetProgramPath("ld");
+  Linker = GetProgramPath(tools::GetLinkerName(Args));
 
   LinuxDistro Distro = DetectLinuxDistro(Arch);
 
diff --git a/lib/Driver/Tools.cpp b/lib/Driver/Tools.cpp
index 8f4f117..bf8fc25 100644
--- a/lib/Driver/Tools.cpp
+++ b/lib/Driver/Tools.cpp
@@ -198,6 +198,19 @@ static void addProfileRT(const ToolChain &TC, const ArgList &Args,
   CmdArgs.push_back(Args.MakeArgString(ProfileRT));
 }
 
+const char *clang::driver::tools::GetLinkerName(const ArgList &Args) {
+  if (Arg *A = Args.getLastArg(options::OPT_fuse_ld_EQ)) {
+    StringRef LDSuffix(A->getValue(Args, 0));
+    if (LDSuffix == "bfd") {
+      return "ld.bfd";
+    }
+    if (LDSuffix == "gold") {
+      return "ld.gold";
+    }
+  }
+  return "ld";
+}
+
 void Clang::AddPreprocessingOptions(Compilation &C,
                                     const Driver &D,
                                     const ArgList &Args,
@@ -4308,7 +4321,7 @@ void darwin::Link::ConstructJob(Compilation &C, const JobAction &JA,
   Args.AddAllArgs(CmdArgs, options::OPT_F);
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -4506,7 +4519,7 @@ void solaris::Link::ConstructJob(Compilation &C, const JobAction &JA,
   addProfileRT(getToolChain(), Args, CmdArgs, getToolChain().getTriple());
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -4618,7 +4631,7 @@ void auroraux::Link::ConstructJob(Compilation &C, const JobAction &JA,
   addProfileRT(getToolChain(), Args, CmdArgs, getToolChain().getTriple());
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -4747,7 +4760,7 @@ void openbsd::Link::ConstructJob(Compilation &C, const JobAction &JA,
   }
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -4939,7 +4952,7 @@ void freebsd::Link::ConstructJob(Compilation &C, const JobAction &JA,
   addProfileRT(getToolChain(), Args, CmdArgs, getToolChain().getTriple());
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -5088,7 +5101,8 @@ void netbsd::Link::ConstructJob(Compilation &C, const JobAction &JA,
 
   addProfileRT(getToolChain(), Args, CmdArgs, getToolChain().getTriple());
 
-  const char *Exec = Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+  const char *Exec =
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -5483,7 +5497,8 @@ void minix::Link::ConstructJob(Compilation &C, const JobAction &JA,
 	 Args.MakeArgString(getToolChain().GetFilePath("crtend.o")));
   }
 
-  const char *Exec = Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+  const char *Exec =
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
@@ -5640,7 +5655,7 @@ void dragonfly::Link::ConstructJob(Compilation &C, const JobAction &JA,
   addProfileRT(getToolChain(), Args, CmdArgs, getToolChain().getTriple());
 
   const char *Exec =
-    Args.MakeArgString(getToolChain().GetProgramPath("ld"));
+    Args.MakeArgString(getToolChain().GetProgramPath(GetLinkerName(Args)));
   C.addCommand(new Command(JA, *this, Exec, CmdArgs));
 }
 
diff --git a/lib/Driver/Tools.h b/lib/Driver/Tools.h
index 651a8f2..31f6adc 100644
--- a/lib/Driver/Tools.h
+++ b/lib/Driver/Tools.h
@@ -598,7 +598,9 @@ namespace visualstudio {
   };
 } // end namespace visualstudio
 
-} // end namespace toolchains
+extern const char *GetLinkerName(const ArgList &Args);
+
+} // end namespace tools
 } // end namespace driver
 } // end namespace clang
 
diff --git a/test/Driver/fuse-ld.c b/test/Driver/fuse-ld.c
new file mode 100644
index 0000000..6683f10
--- /dev/null
+++ b/test/Driver/fuse-ld.c
@@ -0,0 +1,16 @@
+// Test the -fuse-ld options.
+//
+// RUN: %clang -no-canonical-prefixes %s -### -o %t.o 2>&1 \
+// RUN:     --sysroot=%S/Inputs/basic_linux_tree \
+// RUN:   | FileCheck --check-prefix=CHECK-LD %s
+// CHECK-LD: "{{.*}}ld{{(.exe)?}}"
+//
+// RUN: %clang -no-canonical-prefixes %s -### -o %t.o -fuse-ld=bfd 2>&1 \
+// RUN:     --sysroot=%S/Inputs/basic_linux_tree \
+// RUN:   | FileCheck --check-prefix=CHECK-LD-BFD %s
+// CHECK-LD-BFD: "{{.*}}ld.bfd{{(.exe)?}}"
+//
+// RUN: %clang -no-canonical-prefixes %s -### -o %t.o -fuse-ld=gold 2>&1 \
+// RUN:     --sysroot=%S/Inputs/basic_linux_tree \
+// RUN:   | FileCheck --check-prefix=CHECK-LD-GOLD %s
+// CHECK-LD-GOLD: "{{.*}}ld.gold{{(.exe)?}}"
-- 
1.7.7.3

